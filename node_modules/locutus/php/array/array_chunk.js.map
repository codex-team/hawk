{"version":3,"sources":["../../../src/php/array/array_chunk.js"],"names":["module","exports","array_chunk","input","size","preserveKeys","x","p","i","c","l","length","n","Object","prototype","toString","call","hasOwnProperty"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,YAAnC,EAAiD;AAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,CAAJ;AACA,MAAIC,IAAI,EAAR;AACA,MAAIC,IAAI,CAAR;AACA,MAAIC,IAAI,CAAC,CAAT;AACA,MAAIC,IAAIP,MAAMQ,MAAN,IAAgB,CAAxB;AACA,MAAIC,IAAI,EAAR;;AAEA,MAAIR,OAAO,CAAX,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,MAAIS,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+Bb,KAA/B,MAA0C,gBAA9C,EAAgE;AAC9D,QAAIE,YAAJ,EAAkB;AAChB,aAAOG,IAAIE,CAAX,EAAc;AACZ,SAACJ,IAAIE,IAAIJ,IAAT,IACIQ,EAAEH,CAAF,EAAKD,CAAL,IAAUL,MAAMK,CAAN,CADd,GAEII,EAAE,EAAEH,CAAJ,IAAS,EAFb,CAEiBG,EAAEH,CAAF,EAAKD,CAAL,IAAUL,MAAMK,CAAN,CAAV;AACjBA;AACD;AACF,KAPD,MAOO;AACL,aAAOA,IAAIE,CAAX,EAAc;AACZ,SAACJ,IAAIE,IAAIJ,IAAT,IACIQ,EAAEH,CAAF,EAAKH,CAAL,IAAUH,MAAMK,CAAN,CADd,GAEII,EAAE,EAAEH,CAAJ,IAAS,CAACN,MAAMK,CAAN,CAAD,CAFb;AAGAA;AACD;AACF;AACF,GAhBD,MAgBO;AACL,QAAIH,YAAJ,EAAkB;AAChB,WAAKE,CAAL,IAAUJ,KAAV,EAAiB;AACf,YAAIA,MAAMc,cAAN,CAAqBV,CAArB,CAAJ,EAA6B;AAC3B,WAACD,IAAIE,IAAIJ,IAAT,IACIQ,EAAEH,CAAF,EAAKF,CAAL,IAAUJ,MAAMI,CAAN,CADd,GAEIK,EAAE,EAAEH,CAAJ,IAAS,EAFb,CAEiBG,EAAEH,CAAF,EAAKF,CAAL,IAAUJ,MAAMI,CAAN,CAAV;AACjBC;AACD;AACF;AACF,KATD,MASO;AACL,WAAKD,CAAL,IAAUJ,KAAV,EAAiB;AACf,YAAIA,MAAMc,cAAN,CAAqBV,CAArB,CAAJ,EAA6B;AAC3B,WAACD,IAAIE,IAAIJ,IAAT,IACIQ,EAAEH,CAAF,EAAKH,CAAL,IAAUH,MAAMI,CAAN,CADd,GAEIK,EAAE,EAAEH,CAAJ,IAAS,CAACN,MAAMI,CAAN,CAAD,CAFb;AAGAC;AACD;AACF;AACF;AACF;;AAED,SAAOI,CAAP;AACD,CAjED","file":"array_chunk.js","sourcesContent":["module.exports = function array_chunk (input, size, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/array_chunk/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Important note: Per the ECMAScript specification,\n  //      note 1: objects may not always iterate in a predictable order\n  //   example 1: array_chunk(['Kevin', 'van', 'Zonneveld'], 2)\n  //   returns 1: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 2: array_chunk(['Kevin', 'van', 'Zonneveld'], 2, true)\n  //   returns 2: [{0:'Kevin', 1:'van'}, {2: 'Zonneveld'}]\n  //   example 3: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2)\n  //   returns 3: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 4: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2, true)\n  //   returns 4: [{1: 'Kevin', 2: 'van'}, {3: 'Zonneveld'}]\n\n  var x\n  var p = ''\n  var i = 0\n  var c = -1\n  var l = input.length || 0\n  var n = []\n\n  if (size < 1) {\n    return null\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]') {\n    if (preserveKeys) {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][i] = input[i]\n          : n[++c] = {}; n[c][i] = input[i]\n        i++\n      }\n    } else {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][x] = input[i]\n          : n[++c] = [input[i]]\n        i++\n      }\n    }\n  } else {\n    if (preserveKeys) {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][p] = input[p]\n            : n[++c] = {}; n[c][p] = input[p]\n          i++\n        }\n      }\n    } else {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][x] = input[p]\n            : n[++c] = [input[p]]\n          i++\n        }\n      }\n    }\n  }\n\n  return n\n}\n"]}