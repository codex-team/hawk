{"version":3,"sources":["../../../src/php/array/array_merge.js"],"names":["module","exports","array_merge","args","Array","prototype","slice","call","arguments","argl","length","arg","retObj","k","argil","j","i","ct","toStr","Object","toString","retArr","concat","hasOwnProperty","parseInt"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,WAAT,GAAwB;AAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,MAAIC,OAAON,KAAKO,MAAhB;AACA,MAAIC,GAAJ;AACA,MAAIC,SAAS,EAAb;AACA,MAAIC,IAAI,EAAR;AACA,MAAIC,QAAQ,CAAZ;AACA,MAAIC,IAAI,CAAR;AACA,MAAIC,IAAI,CAAR;AACA,MAAIC,KAAK,CAAT;AACA,MAAIC,QAAQC,OAAOd,SAAP,CAAiBe,QAA7B;AACA,MAAIC,SAAS,IAAb;;AAEA,OAAKL,IAAI,CAAT,EAAYA,IAAIP,IAAhB,EAAsBO,GAAtB,EAA2B;AACzB,QAAIE,MAAMX,IAAN,CAAWJ,KAAKa,CAAL,CAAX,MAAwB,gBAA5B,EAA8C;AAC5CK,eAAS,KAAT;AACA;AACD;AACF;;AAED,MAAIA,MAAJ,EAAY;AACVA,aAAS,EAAT;AACA,SAAKL,IAAI,CAAT,EAAYA,IAAIP,IAAhB,EAAsBO,GAAtB,EAA2B;AACzBK,eAASA,OAAOC,MAAP,CAAcnB,KAAKa,CAAL,CAAd,CAAT;AACD;AACD,WAAOK,MAAP;AACD;;AAED,OAAKL,IAAI,CAAJ,EAAOC,KAAK,CAAjB,EAAoBD,IAAIP,IAAxB,EAA8BO,GAA9B,EAAmC;AACjCL,UAAMR,KAAKa,CAAL,CAAN;AACA,QAAIE,MAAMX,IAAN,CAAWI,GAAX,MAAoB,gBAAxB,EAA0C;AACxC,WAAKI,IAAI,CAAJ,EAAOD,QAAQH,IAAID,MAAxB,EAAgCK,IAAID,KAApC,EAA2CC,GAA3C,EAAgD;AAC9CH,eAAOK,IAAP,IAAeN,IAAII,CAAJ,CAAf;AACD;AACF,KAJD,MAIO;AACL,WAAKF,CAAL,IAAUF,GAAV,EAAe;AACb,YAAIA,IAAIY,cAAJ,CAAmBV,CAAnB,CAAJ,EAA2B;AACzB,cAAIW,SAASX,CAAT,EAAY,EAAZ,IAAkB,EAAlB,KAAyBA,CAA7B,EAAgC;AAC9BD,mBAAOK,IAAP,IAAeN,IAAIE,CAAJ,CAAf;AACD,WAFD,MAEO;AACLD,mBAAOC,CAAP,IAAYF,IAAIE,CAAJ,CAAZ;AACD;AACF;AACF;AACF;AACF;;AAED,SAAOD,MAAP;AACD,CA9DD","file":"array_merge.js","sourcesContent":["module.exports = function array_merge () { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/array_merge/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Nate\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: josh\n  //   example 1: var $arr1 = {\"color\": \"red\", 0: 2, 1: 4}\n  //   example 1: var $arr2 = {0: \"a\", 1: \"b\", \"color\": \"green\", \"shape\": \"trapezoid\", 2: 4}\n  //   example 1: array_merge($arr1, $arr2)\n  //   returns 1: {\"color\": \"green\", 0: 2, 1: 4, 2: \"a\", 3: \"b\", \"shape\": \"trapezoid\", 4: 4}\n  //   example 2: var $arr1 = []\n  //   example 2: var $arr2 = {1: \"data\"}\n  //   example 2: array_merge($arr1, $arr2)\n  //   returns 2: {0: \"data\"}\n\n  var args = Array.prototype.slice.call(arguments)\n  var argl = args.length\n  var arg\n  var retObj = {}\n  var k = ''\n  var argil = 0\n  var j = 0\n  var i = 0\n  var ct = 0\n  var toStr = Object.prototype.toString\n  var retArr = true\n\n  for (i = 0; i < argl; i++) {\n    if (toStr.call(args[i]) !== '[object Array]') {\n      retArr = false\n      break\n    }\n  }\n\n  if (retArr) {\n    retArr = []\n    for (i = 0; i < argl; i++) {\n      retArr = retArr.concat(args[i])\n    }\n    return retArr\n  }\n\n  for (i = 0, ct = 0; i < argl; i++) {\n    arg = args[i]\n    if (toStr.call(arg) === '[object Array]') {\n      for (j = 0, argil = arg.length; j < argil; j++) {\n        retObj[ct++] = arg[j]\n      }\n    } else {\n      for (k in arg) {\n        if (arg.hasOwnProperty(k)) {\n          if (parseInt(k, 10) + '' === k) {\n            retObj[ct++] = arg[k]\n          } else {\n            retObj[k] = arg[k]\n          }\n        }\n      }\n    }\n  }\n\n  return retObj\n}\n"]}