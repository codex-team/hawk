{"version":3,"sources":["../../../src/php/array/array_push.js"],"names":["module","exports","array_push","inputArr","i","pr","argv","arguments","argc","length","allDigits","size","highestIdx","len","hasOwnProperty","search","parseInt"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAqBC,QAArB,EAA+B;AAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,IAAI,CAAR;AACA,MAAIC,KAAK,EAAT;AACA,MAAIC,OAAOC,SAAX;AACA,MAAIC,OAAOF,KAAKG,MAAhB;AACA,MAAIC,YAAY,MAAhB;AACA,MAAIC,OAAO,CAAX;AACA,MAAIC,aAAa,CAAjB;AACA,MAAIC,MAAM,CAAV;;AAEA,MAAIV,SAASW,cAAT,CAAwB,QAAxB,CAAJ,EAAuC;AACrC,SAAKV,IAAI,CAAT,EAAYA,IAAII,IAAhB,EAAsBJ,GAAtB,EAA2B;AACzBD,eAASA,SAASM,MAAlB,IAA4BH,KAAKF,CAAL,CAA5B;AACD;AACD,WAAOD,SAASM,MAAhB;AACD;;AAED;AACA,OAAKJ,EAAL,IAAWF,QAAX,EAAqB;AACnB,QAAIA,SAASW,cAAT,CAAwBT,EAAxB,CAAJ,EAAiC;AAC/B,QAAEQ,GAAF;AACA,UAAIR,GAAGU,MAAH,CAAUL,SAAV,MAAyB,CAAC,CAA9B,EAAiC;AAC/BC,eAAOK,SAASX,EAAT,EAAa,EAAb,CAAP;AACAO,qBAAaD,OAAOC,UAAP,GAAoBD,IAApB,GAA2BC,UAAxC;AACD;AACF;AACF;AACD,OAAKR,IAAI,CAAT,EAAYA,IAAII,IAAhB,EAAsBJ,GAAtB,EAA2B;AACzBD,aAAS,EAAES,UAAX,IAAyBN,KAAKF,CAAL,CAAzB;AACD;;AAED,SAAOS,MAAMT,CAAN,GAAU,CAAjB;AACD,CA3CD","file":"array_push.js","sourcesContent":["module.exports = function array_push (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/array_push/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so if you delete properties and then\n  //      note 1: add back properties with the same keys (including numeric) that had\n  //      note 1: been deleted, the order will be as before; thus, this function is not\n  //      note 1: really recommended with associative arrays (objects) in IE environments\n  //   example 1: array_push(['kevin','van'], 'zonneveld')\n  //   returns 1: 3\n\n  var i = 0\n  var pr = ''\n  var argv = arguments\n  var argc = argv.length\n  var allDigits = /^\\d$/\n  var size = 0\n  var highestIdx = 0\n  var len = 0\n\n  if (inputArr.hasOwnProperty('length')) {\n    for (i = 1; i < argc; i++) {\n      inputArr[inputArr.length] = argv[i]\n    }\n    return inputArr.length\n  }\n\n  // Associative (object)\n  for (pr in inputArr) {\n    if (inputArr.hasOwnProperty(pr)) {\n      ++len\n      if (pr.search(allDigits) !== -1) {\n        size = parseInt(pr, 10)\n        highestIdx = size > highestIdx ? size : highestIdx\n      }\n    }\n  }\n  for (i = 1; i < argc; i++) {\n    inputArr[++highestIdx] = argv[i]\n  }\n\n  return len + i - 1\n}\n"]}