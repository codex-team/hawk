{"version":3,"sources":["../../../src/php/array/array_walk_recursive.js"],"names":["module","exports","array_walk_recursive","array","funcname","userdata","key","Object","prototype","toString","call","funcArgs","arguments","length","push","apply","e"],"mappings":";;;;AAAAA,OAAOC,OAAP,GAAiB,SAASC,oBAAT,CAA+BC,KAA/B,EAAsCC,QAAtC,EAAgDC,QAAhD,EAA0D;AAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI,CAACF,KAAD,IAAU,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAA/B,EAAyC;AACvC,WAAO,KAAP;AACD;;AAED,MAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;AAClC,WAAO,KAAP;AACD;;AAED,OAAK,IAAIE,GAAT,IAAgBH,KAAhB,EAAuB;AACrB;AACA,QAAII,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,MAAMG,GAAN,CAA/B,MAA+C,gBAAnD,EAAqE;AACnE,UAAIK,WAAW,CAACR,MAAMG,GAAN,CAAD,EAAaF,QAAb,CAAf;AACA,UAAIQ,UAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACxBF,iBAASG,IAAT,CAAcT,QAAd;AACD;AACD,UAAIH,qBAAqBa,KAArB,CAA2B,IAA3B,EAAiCJ,QAAjC,MAA+C,KAAnD,EAA0D;AACxD,eAAO,KAAP;AACD;AACD;AACD;AACD,QAAI;AACF,UAAIC,UAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACxBT,iBAASD,MAAMG,GAAN,CAAT,EAAqBA,GAArB,EAA0BD,QAA1B;AACD,OAFD,MAEO;AACLD,iBAASD,MAAMG,GAAN,CAAT,EAAqBA,GAArB;AACD;AACF,KAND,CAME,OAAOU,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CA1CD","file":"array_walk_recursive.js","sourcesContent":["module.exports = function array_walk_recursive (array, funcname, userdata) { // eslint-disable-line camelcase\n  // original by: Hugues Peccatte\n  //      note 1: Only works with user-defined functions, not built-in functions like void()\n  //   example 1: array_walk_recursive([3, 4], function () {}, 'userdata')\n  //   returns 1: true\n  //   example 2: array_walk_recursive([3, [4]], function () {}, 'userdata')\n  //   returns 2: true\n  //   example 3: array_walk_recursive([3, []], function () {}, 'userdata')\n  //   returns 3: true\n\n  if (!array || typeof array !== 'object') {\n    return false\n  }\n\n  if (typeof funcname !== 'function') {\n    return false\n  }\n\n  for (var key in array) {\n    // apply \"funcname\" recursively only on arrays\n    if (Object.prototype.toString.call(array[key]) === '[object Array]') {\n      var funcArgs = [array[key], funcname]\n      if (arguments.length > 2) {\n        funcArgs.push(userdata)\n      }\n      if (array_walk_recursive.apply(null, funcArgs) === false) {\n        return false\n      }\n      continue\n    }\n    try {\n      if (arguments.length > 2) {\n        funcname(array[key], key, userdata)\n      } else {\n        funcname(array[key], key)\n      }\n    } catch (e) {\n      return false\n    }\n  }\n\n  return true\n}\n"]}