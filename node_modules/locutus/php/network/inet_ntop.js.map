{"version":3,"sources":["../../../src/php/network/inet_ntop.js"],"names":["module","exports","inet_ntop","a","i","m","c","length","charCodeAt","join","push","toString","replace","t"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,SAAT,CAAoBC,CAApB,EAAuB;AAAE;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,IAAI,CAAR;AACA,MAAIC,IAAI,EAAR;AACA,MAAIC,IAAI,EAAR;;AAEAH,OAAK,EAAL;AACA,MAAIA,EAAEI,MAAF,KAAa,CAAjB,EAAoB;AAClB;AACA,WAAO,CACLJ,EAAEK,UAAF,CAAa,CAAb,CADK,EAELL,EAAEK,UAAF,CAAa,CAAb,CAFK,EAGLL,EAAEK,UAAF,CAAa,CAAb,CAHK,EAILL,EAAEK,UAAF,CAAa,CAAb,CAJK,EAKLC,IALK,CAKA,GALA,CAAP;AAMD,GARD,MAQO,IAAIN,EAAEI,MAAF,KAAa,EAAjB,EAAqB;AAC1B;AACA,SAAKH,IAAI,CAAT,EAAYA,IAAI,EAAhB,EAAoBA,GAApB,EAAyB;AACvBE,QAAEI,IAAF,CAAO,CAAC,CAACP,EAAEK,UAAF,CAAaJ,GAAb,KAAqB,CAAtB,IAA2BD,EAAEK,UAAF,CAAaJ,CAAb,CAA5B,EAA6CO,QAA7C,CAAsD,EAAtD,CAAP;AACD;AACD,WAAOL,EAAEG,IAAF,CAAO,GAAP,EACJG,OADI,CACI,qBADJ,EAC2B,UAAUC,CAAV,EAAa;AAC3CR,UAAKQ,EAAEN,MAAF,GAAWF,EAAEE,MAAd,GAAwBM,CAAxB,GAA4BR,CAAhC;AACA,aAAOQ,CAAP;AACD,KAJI,EAKJD,OALI,CAKIP,KAAK,GALT,EAKc,IALd,CAAP;AAMD,GAXM,MAWA;AACL;AACA,WAAO,KAAP;AACD;AACF,CApCD","file":"inet_ntop.js","sourcesContent":["module.exports = function inet_ntop (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/inet_ntop/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_ntop('\\x7F\\x00\\x00\\x01')\n  //   returns 1: '127.0.0.1'\n  //   _example 2: inet_ntop('\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1')\n  //   _returns 2: '::1'\n\n  var i = 0\n  var m = ''\n  var c = []\n\n  a += ''\n  if (a.length === 4) {\n    // IPv4\n    return [\n      a.charCodeAt(0),\n      a.charCodeAt(1),\n      a.charCodeAt(2),\n      a.charCodeAt(3)\n    ].join('.')\n  } else if (a.length === 16) {\n    // IPv6\n    for (i = 0; i < 16; i++) {\n      c.push(((a.charCodeAt(i++) << 8) + a.charCodeAt(i)).toString(16))\n    }\n    return c.join(':')\n      .replace(/((^|:)0(?=:|$))+:?/g, function (t) {\n        m = (t.length > m.length) ? t : m\n        return t\n      })\n      .replace(m || ' ', '::')\n  } else {\n    // Invalid length\n    return false\n  }\n}\n"]}