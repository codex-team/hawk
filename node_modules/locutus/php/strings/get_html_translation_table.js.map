{"version":3,"sources":["../../../src/php/strings/get_html_translation_table.js"],"names":["module","exports","get_html_translation_table","table","quoteStyle","entities","hashMap","decimal","constMappingTable","constMappingQuoteStyle","useTable","useQuoteStyle","isNaN","toUpperCase","Error","hasOwnProperty","String","fromCharCode"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,0BAAT,CAAqCC,KAArC,EAA4CC,UAA5C,EAAwD;AAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,WAAW,EAAf;AACA,MAAIC,UAAU,EAAd;AACA,MAAIC,OAAJ;AACA,MAAIC,oBAAoB,EAAxB;AACA,MAAIC,yBAAyB,EAA7B;AACA,MAAIC,WAAW,EAAf;AACA,MAAIC,gBAAgB,EAApB;;AAEA;AACAH,oBAAkB,CAAlB,IAAuB,mBAAvB;AACAA,oBAAkB,CAAlB,IAAuB,eAAvB;AACAC,yBAAuB,CAAvB,IAA4B,cAA5B;AACAA,yBAAuB,CAAvB,IAA4B,YAA5B;AACAA,yBAAuB,CAAvB,IAA4B,YAA5B;;AAEAC,aAAW,CAACE,MAAMT,KAAN,CAAD,GACPK,kBAAkBL,KAAlB,CADO,GAEPA,QACEA,MAAMU,WAAN,EADF,GAEE,mBAJN;;AAMAF,kBAAgB,CAACC,MAAMR,UAAN,CAAD,GACZK,uBAAuBL,UAAvB,CADY,GAEZA,aACEA,WAAWS,WAAX,EADF,GAEE,YAJN;;AAMA,MAAIH,aAAa,mBAAb,IAAoCA,aAAa,eAArD,EAAsE;AACpE,UAAM,IAAII,KAAJ,CAAU,YAAYJ,QAAZ,GAAuB,gBAAjC,CAAN;AACD;;AAEDL,WAAS,IAAT,IAAiB,OAAjB;AACA,MAAIK,aAAa,eAAjB,EAAkC;AAChCL,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,OAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,OAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,OAAlB;AACAA,aAAS,KAAT,IAAkB,OAAlB;AACAA,aAAS,KAAT,IAAkB,OAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,OAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,OAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,OAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACAA,aAAS,KAAT,IAAkB,UAAlB;AACAA,aAAS,KAAT,IAAkB,SAAlB;AACAA,aAAS,KAAT,IAAkB,QAAlB;AACD;;AAED,MAAIM,kBAAkB,cAAtB,EAAsC;AACpCN,aAAS,IAAT,IAAiB,QAAjB;AACD;AACD,MAAIM,kBAAkB,YAAtB,EAAoC;AAClCN,aAAS,IAAT,IAAiB,OAAjB;AACD;AACDA,WAAS,IAAT,IAAiB,MAAjB;AACAA,WAAS,IAAT,IAAiB,MAAjB;;AAEA;AACA,OAAKE,OAAL,IAAgBF,QAAhB,EAA0B;AACxB,QAAIA,SAASU,cAAT,CAAwBR,OAAxB,CAAJ,EAAsC;AACpCD,cAAQU,OAAOC,YAAP,CAAoBV,OAApB,CAAR,IAAwCF,SAASE,OAAT,CAAxC;AACD;AACF;;AAED,SAAOD,OAAP;AACD,CAzKD","file":"get_html_translation_table.js","sourcesContent":["module.exports = function get_html_translation_table (table, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/get_html_translation_table/\n  // original by: Philip Peterson\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: noname\n  // bugfixed by: Alex\n  // bugfixed by: Marco\n  // bugfixed by: madipta\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: T.Wild\n  // improved by: KELAN\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Frank Forte\n  //    input by: Ratheous\n  //      note 1: It has been decided that we're not going to add global\n  //      note 1: dependencies to Locutus, meaning the constants are not\n  //      note 1: real constants, but strings instead. Integers are also supported if someone\n  //      note 1: chooses to create the constants themselves.\n  //   example 1: get_html_translation_table('HTML_SPECIALCHARS')\n  //   returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n\n  var entities = {}\n  var hashMap = {}\n  var decimal\n  var constMappingTable = {}\n  var constMappingQuoteStyle = {}\n  var useTable = {}\n  var useQuoteStyle = {}\n\n  // Translate arguments\n  constMappingTable[0] = 'HTML_SPECIALCHARS'\n  constMappingTable[1] = 'HTML_ENTITIES'\n  constMappingQuoteStyle[0] = 'ENT_NOQUOTES'\n  constMappingQuoteStyle[2] = 'ENT_COMPAT'\n  constMappingQuoteStyle[3] = 'ENT_QUOTES'\n\n  useTable = !isNaN(table)\n    ? constMappingTable[table]\n    : table\n      ? table.toUpperCase()\n      : 'HTML_SPECIALCHARS'\n\n  useQuoteStyle = !isNaN(quoteStyle)\n    ? constMappingQuoteStyle[quoteStyle]\n    : quoteStyle\n      ? quoteStyle.toUpperCase()\n      : 'ENT_COMPAT'\n\n  if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n    throw new Error('Table: ' + useTable + ' not supported')\n  }\n\n  entities['38'] = '&amp;'\n  if (useTable === 'HTML_ENTITIES') {\n    entities['160'] = '&nbsp;'\n    entities['161'] = '&iexcl;'\n    entities['162'] = '&cent;'\n    entities['163'] = '&pound;'\n    entities['164'] = '&curren;'\n    entities['165'] = '&yen;'\n    entities['166'] = '&brvbar;'\n    entities['167'] = '&sect;'\n    entities['168'] = '&uml;'\n    entities['169'] = '&copy;'\n    entities['170'] = '&ordf;'\n    entities['171'] = '&laquo;'\n    entities['172'] = '&not;'\n    entities['173'] = '&shy;'\n    entities['174'] = '&reg;'\n    entities['175'] = '&macr;'\n    entities['176'] = '&deg;'\n    entities['177'] = '&plusmn;'\n    entities['178'] = '&sup2;'\n    entities['179'] = '&sup3;'\n    entities['180'] = '&acute;'\n    entities['181'] = '&micro;'\n    entities['182'] = '&para;'\n    entities['183'] = '&middot;'\n    entities['184'] = '&cedil;'\n    entities['185'] = '&sup1;'\n    entities['186'] = '&ordm;'\n    entities['187'] = '&raquo;'\n    entities['188'] = '&frac14;'\n    entities['189'] = '&frac12;'\n    entities['190'] = '&frac34;'\n    entities['191'] = '&iquest;'\n    entities['192'] = '&Agrave;'\n    entities['193'] = '&Aacute;'\n    entities['194'] = '&Acirc;'\n    entities['195'] = '&Atilde;'\n    entities['196'] = '&Auml;'\n    entities['197'] = '&Aring;'\n    entities['198'] = '&AElig;'\n    entities['199'] = '&Ccedil;'\n    entities['200'] = '&Egrave;'\n    entities['201'] = '&Eacute;'\n    entities['202'] = '&Ecirc;'\n    entities['203'] = '&Euml;'\n    entities['204'] = '&Igrave;'\n    entities['205'] = '&Iacute;'\n    entities['206'] = '&Icirc;'\n    entities['207'] = '&Iuml;'\n    entities['208'] = '&ETH;'\n    entities['209'] = '&Ntilde;'\n    entities['210'] = '&Ograve;'\n    entities['211'] = '&Oacute;'\n    entities['212'] = '&Ocirc;'\n    entities['213'] = '&Otilde;'\n    entities['214'] = '&Ouml;'\n    entities['215'] = '&times;'\n    entities['216'] = '&Oslash;'\n    entities['217'] = '&Ugrave;'\n    entities['218'] = '&Uacute;'\n    entities['219'] = '&Ucirc;'\n    entities['220'] = '&Uuml;'\n    entities['221'] = '&Yacute;'\n    entities['222'] = '&THORN;'\n    entities['223'] = '&szlig;'\n    entities['224'] = '&agrave;'\n    entities['225'] = '&aacute;'\n    entities['226'] = '&acirc;'\n    entities['227'] = '&atilde;'\n    entities['228'] = '&auml;'\n    entities['229'] = '&aring;'\n    entities['230'] = '&aelig;'\n    entities['231'] = '&ccedil;'\n    entities['232'] = '&egrave;'\n    entities['233'] = '&eacute;'\n    entities['234'] = '&ecirc;'\n    entities['235'] = '&euml;'\n    entities['236'] = '&igrave;'\n    entities['237'] = '&iacute;'\n    entities['238'] = '&icirc;'\n    entities['239'] = '&iuml;'\n    entities['240'] = '&eth;'\n    entities['241'] = '&ntilde;'\n    entities['242'] = '&ograve;'\n    entities['243'] = '&oacute;'\n    entities['244'] = '&ocirc;'\n    entities['245'] = '&otilde;'\n    entities['246'] = '&ouml;'\n    entities['247'] = '&divide;'\n    entities['248'] = '&oslash;'\n    entities['249'] = '&ugrave;'\n    entities['250'] = '&uacute;'\n    entities['251'] = '&ucirc;'\n    entities['252'] = '&uuml;'\n    entities['253'] = '&yacute;'\n    entities['254'] = '&thorn;'\n    entities['255'] = '&yuml;'\n  }\n\n  if (useQuoteStyle !== 'ENT_NOQUOTES') {\n    entities['34'] = '&quot;'\n  }\n  if (useQuoteStyle === 'ENT_QUOTES') {\n    entities['39'] = '&#39;'\n  }\n  entities['60'] = '&lt;'\n  entities['62'] = '&gt;'\n\n  // ascii decimals to real symbols\n  for (decimal in entities) {\n    if (entities.hasOwnProperty(decimal)) {\n      hashMap[String.fromCharCode(decimal)] = entities[decimal]\n    }\n  }\n\n  return hashMap\n}\n"]}