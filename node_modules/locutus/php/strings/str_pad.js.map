{"version":3,"sources":["../../../src/php/strings/str_pad.js"],"names":["module","exports","str_pad","input","padLength","padString","padType","half","padToGo","_strPadRepeater","s","len","collect","length","substr","undefined","Math","ceil"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAkBC,KAAlB,EAAyBC,SAAzB,EAAoCC,SAApC,EAA+CC,OAA/C,EAAwD;AAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,OAAO,EAAX;AACA,MAAIC,OAAJ;;AAEA,MAAIC,kBAAkB,SAAlBA,eAAkB,CAAUC,CAAV,EAAaC,GAAb,EAAkB;AACtC,QAAIC,UAAU,EAAd;;AAEA,WAAOA,QAAQC,MAAR,GAAiBF,GAAxB,EAA6B;AAC3BC,iBAAWF,CAAX;AACD;AACDE,cAAUA,QAAQE,MAAR,CAAe,CAAf,EAAkBH,GAAlB,CAAV;;AAEA,WAAOC,OAAP;AACD,GATD;;AAWAT,WAAS,EAAT;AACAE,cAAYA,cAAcU,SAAd,GAA0BV,SAA1B,GAAsC,GAAlD;;AAEA,MAAIC,YAAY,cAAZ,IAA8BA,YAAY,eAA1C,IAA6DA,YAAY,cAA7E,EAA6F;AAC3FA,cAAU,eAAV;AACD;AACD,MAAI,CAACE,UAAUJ,YAAYD,MAAMU,MAA7B,IAAuC,CAA3C,EAA8C;AAC5C,QAAIP,YAAY,cAAhB,EAAgC;AAC9BH,cAAQM,gBAAgBJ,SAAhB,EAA2BG,OAA3B,IAAsCL,KAA9C;AACD,KAFD,MAEO,IAAIG,YAAY,eAAhB,EAAiC;AACtCH,cAAQA,QAAQM,gBAAgBJ,SAAhB,EAA2BG,OAA3B,CAAhB;AACD,KAFM,MAEA,IAAIF,YAAY,cAAhB,EAAgC;AACrCC,aAAOE,gBAAgBJ,SAAhB,EAA2BW,KAAKC,IAAL,CAAUT,UAAU,CAApB,CAA3B,CAAP;AACAL,cAAQI,OAAOJ,KAAP,GAAeI,IAAvB;AACAJ,cAAQA,MAAMW,MAAN,CAAa,CAAb,EAAgBV,SAAhB,CAAR;AACD;AACF;;AAED,SAAOD,KAAP;AACD,CA5CD","file":"str_pad.js","sourcesContent":["module.exports = function str_pad (input, padLength, padString, padType) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/str_pad/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Michael White (http://getsprink.com)\n  //    input by: Marco van Oort\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT')\n  //   returns 1: '-=-=-=-=-=-Kevin van Zonneveld'\n  //   example 2: str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH')\n  //   returns 2: '------Kevin van Zonneveld-----'\n\n  var half = ''\n  var padToGo\n\n  var _strPadRepeater = function (s, len) {\n    var collect = ''\n\n    while (collect.length < len) {\n      collect += s\n    }\n    collect = collect.substr(0, len)\n\n    return collect\n  }\n\n  input += ''\n  padString = padString !== undefined ? padString : ' '\n\n  if (padType !== 'STR_PAD_LEFT' && padType !== 'STR_PAD_RIGHT' && padType !== 'STR_PAD_BOTH') {\n    padType = 'STR_PAD_RIGHT'\n  }\n  if ((padToGo = padLength - input.length) > 0) {\n    if (padType === 'STR_PAD_LEFT') {\n      input = _strPadRepeater(padString, padToGo) + input\n    } else if (padType === 'STR_PAD_RIGHT') {\n      input = input + _strPadRepeater(padString, padToGo)\n    } else if (padType === 'STR_PAD_BOTH') {\n      half = _strPadRepeater(padString, Math.ceil(padToGo / 2))\n      input = half + input + half\n      input = input.substr(0, padLength)\n    }\n  }\n\n  return input\n}\n"]}