{"version":3,"sources":["../../../src/php/strings/str_replace.js"],"names":["module","exports","str_replace","search","replace","subject","countObj","i","j","temp","repl","sl","fl","f","concat","r","s","ra","Object","prototype","toString","call","sa","$global","window","global","$locutus","php","length","value","undefined","split","join"],"mappings":";;;;AAAAA,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgDC,QAAhD,EAA0D;AAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,IAAI,CAAR;AACA,MAAIC,IAAI,CAAR;AACA,MAAIC,OAAO,EAAX;AACA,MAAIC,OAAO,EAAX;AACA,MAAIC,KAAK,CAAT;AACA,MAAIC,KAAK,CAAT;AACA,MAAIC,IAAI,GAAGC,MAAH,CAAUX,MAAV,CAAR;AACA,MAAIY,IAAI,GAAGD,MAAH,CAAUV,OAAV,CAAR;AACA,MAAIY,IAAIX,OAAR;AACA,MAAIY,KAAKC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,CAA/B,MAAsC,gBAA/C;AACA,MAAIO,KAAKJ,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,MAAsC,gBAA/C;AACAA,MAAI,GAAGF,MAAH,CAAUE,CAAV,CAAJ;;AAEA,MAAIO,UAAW,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAxD;AACAF,UAAQG,QAAR,GAAmBH,QAAQG,QAAR,IAAoB,EAAvC;AACA,MAAIA,WAAWH,QAAQG,QAAvB;AACAA,WAASC,GAAT,GAAeD,SAASC,GAAT,IAAgB,EAA/B;;AAEA,MAAI,QAAQxB,MAAR,yCAAQA,MAAR,OAAoB,QAApB,IAAgC,OAAQC,OAAR,KAAqB,QAAzD,EAAmE;AACjEK,WAAOL,OAAP;AACAA,cAAU,EAAV;AACA,SAAKG,IAAI,CAAT,EAAYA,IAAIJ,OAAOyB,MAAvB,EAA+BrB,KAAK,CAApC,EAAuC;AACrCH,cAAQG,CAAR,IAAaE,IAAb;AACD;AACDA,WAAO,EAAP;AACAM,QAAI,GAAGD,MAAH,CAAUV,OAAV,CAAJ;AACAa,SAAKC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,CAA/B,MAAsC,gBAA3C;AACD;;AAED,MAAI,OAAOT,QAAP,KAAoB,WAAxB,EAAqC;AACnCA,aAASuB,KAAT,GAAiB,CAAjB;AACD;;AAED,OAAKtB,IAAI,CAAJ,EAAOI,KAAKK,EAAEY,MAAnB,EAA2BrB,IAAII,EAA/B,EAAmCJ,GAAnC,EAAwC;AACtC,QAAIS,EAAET,CAAF,MAAS,EAAb,EAAiB;AACf;AACD;AACD,SAAKC,IAAI,CAAJ,EAAOI,KAAKC,EAAEe,MAAnB,EAA2BpB,IAAII,EAA/B,EAAmCJ,GAAnC,EAAwC;AACtCC,aAAOO,EAAET,CAAF,IAAO,EAAd;AACAG,aAAOO,KAAMF,EAAEP,CAAF,MAASsB,SAAT,GAAqBf,EAAEP,CAAF,CAArB,GAA4B,EAAlC,GAAwCO,EAAE,CAAF,CAA/C;AACAC,QAAET,CAAF,IAAQE,IAAD,CAAOsB,KAAP,CAAalB,EAAEL,CAAF,CAAb,EAAmBwB,IAAnB,CAAwBtB,IAAxB,CAAP;AACA,UAAI,OAAOJ,QAAP,KAAoB,WAAxB,EAAqC;AACnCA,iBAASuB,KAAT,IAAoBpB,KAAKsB,KAAL,CAAWlB,EAAEL,CAAF,CAAX,CAAD,CAAmBoB,MAAnB,GAA4B,CAA/C;AACD;AACF;AACF;AACD,SAAON,KAAKN,CAAL,GAASA,EAAE,CAAF,CAAhB;AACD,CA9ED","file":"str_replace.js","sourcesContent":["module.exports = function str_replace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/str_replace/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Gabriel Paderni\n  // improved by: Philip Peterson\n  // improved by: Simon Willison (http://simonwillison.net)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Anton Ongson\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Oleg Eremeev\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Oleg Eremeev\n  //      note 1: The countObj parameter (optional) if used must be passed in as a\n  //      note 1: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_replace(' ', '.', 'Kevin van Zonneveld')\n  //   returns 1: 'Kevin.van.Zonneveld'\n  //   example 2: str_replace(['{name}', 'l'], ['hello', 'm'], '{name}, lars')\n  //   returns 2: 'hemmo, mars'\n  //   example 3: str_replace(Array('S','F'),'x','ASDFASDF')\n  //   returns 3: 'AxDxAxDx'\n  //   example 4: var countObj = {}\n  //   example 4: str_replace(['A','D'], ['x','y'] , 'ASDFASDF' , countObj)\n  //   example 4: var $result = countObj.value\n  //   returns 4: 4\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = [].concat(search)\n  var r = [].concat(replace)\n  var s = subject\n  var ra = Object.prototype.toString.call(r) === '[object Array]'\n  var sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n    temp = ''\n    r = [].concat(replace)\n    ra = Object.prototype.toString.call(r) === '[object Array]'\n  }\n\n  if (typeof countObj !== 'undefined') {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      if (typeof countObj !== 'undefined') {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n  return sa ? s : s[0]\n}\n"]}