{"version":3,"sources":["../../../src/php/datetime/gmmktime.js"],"names":["module","exports","gmmktime","d","Date","r","arguments","i","e","length","parseInt","isNaN","setUTCFullYear","setUTCHours","time","getTime"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,QAAT,GAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,IAAI,IAAIC,IAAJ,EAAR;AACA,MAAIC,IAAIC,SAAR;AACA,MAAIC,IAAI,CAAR;AACA,MAAIC,IAAI,CAAC,OAAD,EAAU,SAAV,EAAqB,SAArB,EAAgC,OAAhC,EAAyC,MAAzC,EAAiD,UAAjD,CAAR;;AAEA,OAAKD,IAAI,CAAT,EAAYA,IAAIC,EAAEC,MAAlB,EAA0BF,GAA1B,EAA+B;AAC7B,QAAI,OAAOF,EAAEE,CAAF,CAAP,KAAgB,WAApB,EAAiC;AAC/BF,QAAEE,CAAF,IAAOJ,EAAE,WAAWK,EAAED,CAAF,CAAb,GAAP;AACA;AACAF,QAAEE,CAAF,KAASA,MAAM,CAAf;AACD,KAJD,MAIO;AACLF,QAAEE,CAAF,IAAOG,SAASL,EAAEE,CAAF,CAAT,EAAe,EAAf,CAAP;AACA,UAAII,MAAMN,EAAEE,CAAF,CAAN,CAAJ,EAAiB;AACf,eAAO,KAAP;AACD;AACF;AACF;;AAED;AACAF,IAAE,CAAF,KAASA,EAAE,CAAF,KAAQ,CAAR,GAAaA,EAAE,CAAF,KAAQ,EAAR,GAAa,GAAb,GAAoBA,EAAE,CAAF,KAAQ,GAAR,GAAc,IAAd,GAAqB,CAAtD,GAA4D,CAArE;;AAEA;AACA;AACAF,IAAES,cAAF,CAAiBP,EAAE,CAAF,CAAjB,EAAuBA,EAAE,CAAF,IAAO,CAA9B,EAAiCA,EAAE,CAAF,CAAjC;;AAEA;AACAF,IAAEU,WAAF,CAAcR,EAAE,CAAF,CAAd,EAAoBA,EAAE,CAAF,CAApB,EAA0BA,EAAE,CAAF,CAA1B;;AAEA,MAAIS,OAAOX,EAAEY,OAAF,EAAX;;AAEA;AACA;AACA,SAAO,CAACD,OAAO,GAAP,IAAc,CAAf,KAAqBA,OAAO,CAA5B,CAAP;AACD,CA1CD","file":"gmmktime.js","sourcesContent":["module.exports = function gmmktime () {\n  //  discuss at: http://locutus.io/php/gmmktime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: mktime\n  //   example 1: gmmktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: gmmktime(0, 0, -1, 1, 1, 1970)\n  //   returns 2: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['getUTC' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 69 ? 2e3 : (r[5] <= 100 ? 1900 : 0)) : 0)\n\n  // Set year, month (-1 to fix JS months), and date.\n  // !This must come before the call to setHours!\n  d.setUTCFullYear(r[5], r[3] - 1, r[4])\n\n  // Set hours, minutes, and seconds.\n  d.setUTCHours(r[0], r[1], r[2])\n\n  var time = d.getTime()\n\n  // Divide milliseconds by 1000 to return seconds and drop decimal.\n  // Add 1 second if negative or it'll be off from PHP by 1 second.\n  return (time / 1e3 >> 0) - (time < 0)\n}\n"]}